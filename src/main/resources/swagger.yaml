openapi: 3.0.0
info:
  title: OpenAPI definition oh shit were go again
  version: v0
servers:
  - url: http://127.0.0.1:8080
    description: Generated server url
paths:
  "/pet":
    post:
      summary: Add pet to db
      operationId: savePet
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Pet"
        required: true
      responses:
        '200':
          description: Pet added
          content:
            application/json;:
              schema:
                "$ref": "#/components/schemas/Pet"
        "300":
          description: "its 300"
          content:
            "*/*":
              schema:
                "$ref": "#/components/schemas/Pet"

  "/petName":
    post:
      operationId: savePetMap
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
        required: true
      responses:
        '200':
          description: NICE
          content:
            application/json:
              schema:
                type: object
        '300':
          description: NO nice 300
          content:
            application/json:
              schema:
                type: object
  "/{name}":
    get:
      summary: Add string to db
      operationId: hello
      parameters:
        - name: name
          in: path
          description: Name for add into db
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Everything ok
          content:
            text/plain; charset=utf-8:
              schema:
                type: string
        '400':
          description: Bad request
          content:
            "*/*":
              schema:
                type: string
  "/":
    get:
      operationId: main
      responses:
        '200':
          description: OK
          content:
            "*/*":
              schema:
                type: string
        "300":
          description: "its 300"
          content:
            "*/*":
              schema:
                type: string
components:
  schemas:
    Pet:
      type: object
      properties:
        id:
          type: integer
          format: int64
        age:
          type: integer
          format: int32
        name:
          type: string


